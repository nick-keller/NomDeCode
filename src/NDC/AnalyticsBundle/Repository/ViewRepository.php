<?php

namespace NDC\AnalyticsBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query;
use NDC\BlogBundle\Entity\Article;

/**
 * ViewRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ViewRepository extends EntityRepository
{
    public function articleStats(Article $article, \DateTime $from, \DateTime $to, $step = '+1 day', $groupBy = '%j%y', $format = 'd-m-Y')
    {
        $data = array();
        $i = new \DateTime($from->format('Y-m-d H:i:sP'));

        while($i <= $to){
            $data[$i->format($format)] = 0;
            $i->modify($step);
        }

        $result = $this->createQueryBuilder('v')
            ->select('DATE_FORMAT(v.createdAt, :groupBy) HIDDEN groupByDate, COUNT(DISTINCT v.sessionId) total, v.createdAt')
            ->setParameter('groupBy', $groupBy)
            ->where('v.article = :article')
            ->setParameter('article', $article)
            ->andWhere('v.createdAt >= :from AND v.createdAt < :to')
            ->setParameter('from', $from)
            ->setParameter('to', $to->modify($step))
            ->groupBy('groupByDate')
            ->orderBy('v.createdAt', 'ASC')
            ->getQuery()
            ->getResult(Query::HYDRATE_ARRAY);

        foreach($result as $r)
            $data[$r['createdAt']->format($format)] = intval($r['total']);

        return $data;
    }

    public function readersStats(\DateTime $from, \DateTime $to, $step = '+1 day', $groupBy = '%j%y', $format = 'd-m-Y')
    {
        $data = array();
        $i = new \DateTime($from->format('Y-m-d H:i:sP'));

        while($i <= $to){
            $data[$i->format($format)] = 0;
            $i->modify($step);
        }

        $result = $this->createQueryBuilder('v')
            ->select('DATE_FORMAT(v.createdAt, :groupBy) HIDDEN groupByDate, COUNT(DISTINCT v.sessionId) total, v.createdAt')
            ->setParameter('groupBy', $groupBy)
            ->andWhere('v.createdAt >= :from AND v.createdAt < :to')
            ->setParameter('from', $from)
            ->setParameter('to', $to->modify($step))
            ->groupBy('groupByDate')
            ->orderBy('v.createdAt', 'ASC')
            ->getQuery()
            ->getResult(Query::HYDRATE_ARRAY);

        foreach($result as $r)
            $data[$r['createdAt']->format($format)] = intval($r['total']);

        return $data;
    }
}
